// Read SpriteSheet from json, which generated by [SpriteSheetPacker](https://github.com/amakaseev/sprite-sheet-packer)

#ifndef READ_SHEET_HPP
#define READ_SHEET_HPP
#include <iostream>
#include <fstream>
#include <filesystem>
#include <string>
#include <vector>
#include <streambuf>

#include <json/json.h>
#include <glm/glm.hpp>

#include "base/log.hpp"
#include "base/geo_math.hpp"
#include "base/validable.hpp"
using std::ifstream;
using std::string;
using std::vector;
using std::istreambuf_iterator;
namespace fs = std::filesystem;


using Point = glm::ivec2;

class ImageInSheet final : public Validable{
 public:
     ImageInSheet(string name, Point position, isize size, isize origin_size);
     string GetName() const;
     Point GetPosition() const;
     isize GetSize() const;
     isize GetOriginSize() const;

 private:
     Point _position;
     isize _size;
     isize _origin_size;
     string _name;
};

class ImageSheet final : public Validable {
 public:
     static ImageSheet ReadFromJson(fs::path filename);
     string GetImageFilename() const;
     const vector<ImageInSheet>& GetImages() const;
 private:
     vector<ImageInSheet> _images;
     string _img_filename;

     ImageSheet(fs::path);
     vector<ImageInSheet> readSpriteSheet(string filename);
     Json::Value readJsonFile(string filename);
     vector<ImageInSheet> parseJsonFile2ImageInfo(Json::Value& root);
};

#endif

